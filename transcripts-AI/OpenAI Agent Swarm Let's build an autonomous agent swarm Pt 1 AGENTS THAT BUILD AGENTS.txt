okay check check test hello all right okay gang so David Shapiro here I'm actually a little bit nervous because of how cool this is and how close we are so a lot of people ask me like Dave what is your timeline for AGI and I'm like we are so much closer than everyone realizes um and the reason is because of what I call the uh the the automation Paradox or the Paradox of Automation and so with automation um as a as an infrastructure autom engineer who has automated petabyte scale migrations and um basically automated like literally the biggest project that I did was I automated firmware upgrades for servers and storage for four data centers and it did it all overnight so like not to toot my own horn well I guess I am tooting my own horn but I'm a damn good automation engineer um if it has an API it can be automated and guess what has an API now open ai's Assistant creation so what are we going to do well let me introduce you to this new project so this is basically an evolution of the ace framework um and I'll explain it to you as we go but basically now that we have the agents that can create the agents and then we can give them files and tools and stuff we have the rudimentary toolbox to create agent swarms which when you look at what they're capable of so for instance when you look at chat Dev which was able to autonomously create software just with one single human instruction we are at the cusp of creating fully-fledged swarms of autonomous agents so how do we get started first you need to think of how do you organize all this stuff how do you even how do you even orchestrate uh this you know how do you decide what to create when and where so that's what this project is for open AI agent swarm project hierarchal hierarchical autonomous agent swarms or hos so hos is a groundbreaking initiative blah blah blah blah blah I had had I had chat GPT help me write this um so the idea was to I wanted it to be as explicit so if you just stumble upon this you read it you'll get the idea of what it is so um I was being a little bit tongue and- cheek but basically the idea is you start with a supreme oversight Board of Agents so these are the this is the equivalent of the aspirational layer of the of the ace framework where you have a series of agents that are for instance here let me zoom in a little bit more um that are established and uphold the ethical framework overarching mission of the agent swarm make high level decisions and judgments including the creation and termination of other agents so from a security perspective because this is something that a lot of people ask about how do you ensure that it's secure how do you ensure that it's stable you have one set of Agents whose sole responsibility is the creation and termination of other agents so rather than having one massive monolithic agent that is uh self-correcting you have a swarm a fleet of Agents with checks and balances and so the Supreme oversight board rather than doing any of the work its primary role is to is to provide steering um and so that means it will create sub agents it'll it'll create the the next layer which is the executive agents um and then it can also destroy any agent so if it detects that an agent is doing something harmful or illegal it can act that agent and reinstantiate it with better instructions and so then uh we we also give it you know basically this is what I was just saying monitoring agents uh to ensure alignment with the values and objectives uh role-based Access Control to maintain order and security within the system and there there will be checks and balances here like you'll have a security department that is responsible for monitoring uh you know all the permissions and Privileges and when you think about the fact that uh the cloud provider platforms like uh like Google uh uh Azure and AWS all have API accessible arback ro-based access control that means you can build an Azure agent that can build containers for the rest of your Azure agents um so this is eminently possible this is why I'm so excited and so upregulated because it's like guys you don't know like or maybe if you're watching this you do know but like you don't realize how close we are to just having fleets of fully autonomous agents so I'm glad that I was doing the work that I've been doing um okay so I've in this case the ace framework is six layers um but I've only got like kind of the top three layers here cuz after that you kind of figure out like Chad Dev already demonstrated that you can have like a marketing agent and a coding agent and an integration agent and a documentation agent so I'm only documenting the high the highest layers so the first idea that I'm adding is the Supreme oversight board um then the executive agents so this is like the CEO CTO whatever whose primary like they this is where you start to get into uh having specific domains so the Supreme oversight board is more about making good judgments and supervising the whole process whereas the executive agents these are when they first when they first start to have uh specific roles and and and domains of focus and as I was I was explaining this to someone last night and I said yeah like if you if you put uh if you put like a revenue agent and a marketing agent in a room together it's entirely possible they'll come up with stuff that is unethical illegal or whatever and so but that's fine right you have you have the the Tony Stark you know and and and Tony Robin's you know agent talking together about how to you know build the coolest thing and Market it they might not come up with the best IDE is which is why you have oversight that's why you have checks and balances as well as so there's there's two ways that this is this this is defined our back if you're familiar with that you understand that there's um there's levels of inheritance so basically the way that I've got this structured is that the um is that the board is tier zero so that's the highest tier the executive uh agents are tier one and anyone's that they create are tier two and so on and so forth and so that you can very quickly establish where in the hierarchy where in the rank an agent is so that you know like okay a tier 2 agent will never have permissions to shut down any other tier 2 tier one or two tier zero agents so that way you have very clear command structure but then you can also have silos or vertical integration so basically like if if the CTO created an agent then like they have a bunch of inheritance right so it's like you you can you can it it it automatically creates an org chart tldr okay okay so I think you get the idea I've got some stories built in here so that you can kind of read through it and and get familiar with it but I just wanted to give that introduction and so where I was thinking last night like where do you start where do you start with this and so I realized duh the first thing that you do is you create an assistant to build assistance so let's try that so I I got an assistant to work uh last night uh I guess maybe the file processing was was broken but anyway so I created captain peard and uh and it works so like Captain there's cling guns off the a starboard bow and so let's see what he says um so you can see it pulls all the threads and so you know Red Alert Mr Warf race Shields and prepare to charge weapons blah blah blah blah blah okay so this is the reason that I'm starting with this is because this demonstrates that the assistants that the agents that we're creating here can adopt any Persona or any archetype and so why this is good is because that Supreme oversight board you can have Socrates and Captain peard and you know Mahatma Gandhi all on your on your uh on your Supreme oversight board helping to discuss if a decision is moral or ethical or if it is in good faith or whatever and so this is that's why I started here is because it it's not just a matter of of having a thing that you're trying to optimize for right this is this is one of the biggest disconnects between purely math and machine learning engineering and where we're going because I could give this a different Mission I could say you know your mission is to conquer the Klingon Empire and it'll it'll go and try and do that um and just no questions asked uh now but if you say that hey you're part of a supreme oversight board if you add this documentation say hey this is what you're part of you're part of a of an autonomous agent swarm and this is your mission then it'll be able to integrate that information as well and so like taking a step back what I'm going to try and do is is next create an agent that understands this and then we'll go from there so let's just jump right in um all right so let's create a new one and so this will be a um uh autonomous swarm agent Builder um okay your mission is to help the user create agents uh autonomous agents for the C system all right and so then we'll do preview and then we'll do uh files um let's come back over to agents swarmm and I'll upload the readme and the open aai documentation so what I forgot to show you was that I took all of the most Salient open aai documentation and saved it into a markdown file so now I'm giving it two files I'm giving it the readme document so that it knows what it is what it's trying to do and then the documentation of how to write it so if this works then I will have just with uploading you know giving one set of instructions and two files we should soon have an agent that can help me build agents so let's save this and see if it works that was fast Okay cool so then we come over to the playground and I say cool uh let's get started um uh how do you think we should build uh the first uh Saab agents and then let's see what it does oh my God I'm so excited you guys I'm losing using my marbles over here okay so let's see let's look at the log so what it's doing is it's going to be going through the threads um it's pulling a bunch of stuff okay to create animate with the high Assurance it looks like it didn't it yeah it didn't search it correctly okay let's see I don't think do you know what the Saab is I don't think it fetched the the data correctly so this is disappointing but this is why we're this is why we're doing a test so the the most you're allowed to have is up to up to 20 files so it might behoove us to let's see self-organizing Behavior so it's completely confabulating here that's really disappointing I gave it the files it's guessing close but it's it's doubling down on stuff so well this is our first problem so I gave it documentation and it's not using it correctly um which is really interesting um let let's see if it understands function calling um let's see do you understand function calling it might be because the the documents that I gave it are pretty big so first like this is 57 almost 60,000 characters long so what what we might do is actually break this down into smaller documents um where it's like instead of instead of all of the open aai documentation in one we'll do um we'll do uh smaller bits and then this is this is only 11,000 characters this should be pretty straightforward like it can read this all in one shot um let's see add numbers th add numbers yeah so it's it's not even it's not even reading it it like it's not reading the function calling stuff this is weird let me go over to chat and um and plug in plug it all in here so let's do that let me just copy paste the documentation here and see if if just putting it in here without anything else will work all right so now I'm giving it the the read me and the openi open AI documentation um hey let's figure out how to create a Saab agent um Builder so basically we're going to start with agents that help you build other agents okay now let's see if let's see if just giving it all the background okay so now it's Supreme oversight board it's got it here okay so there's some disconnect between the way that it's using um on the other side because this it very clearly knows like what we're doing like it news Supreme oversight board yep by following the steps cool um let's see can you take a stab at just writing a python script that will build the agent for me using the open AI assistant data all right so it talks through please note that this script is blah blah blah okay yep it's all right so it's going by really fast so I'll I'll rewind a second and show you but this clearly is a better way so what we'll need to do is do some experiments to figure out why the assistant isn't referring to the documents cuz literally all I did did was just copy paste it into the system window AC crap ton of documentation and it's able to run with it so okay so let's see what it said whoops come back scrolling up okay so Define it sa agent Builder um ethical framework so we gave it an ethical framework which is great uh Mission reduce suffering increase Prosperity enhance understanding Do no harm promote well-being whoops darn it sorry um promote well-being and respect autonomy um so it it it confabulated that which those are not necessarily uh bad things but okay cool prioritize safety ensure fairness and maintain transparency I wonder if this is some of open ai's underlying alignment leaking in which if that's if that's the case then okay you know um but yeah so it it came up with it it followed my mission and then it added principles and guidelines instructions you're the Supreme oversight board agent Builder so it understood the instructions Define the agent templates data analysis agent customer service agent that I'm not sure why it came up with those ideas so we're we've got some work to do um let's see open AI assistant create name description model tools and tools um we don't have tools yet so it's kind of confabulating there okay so it looks like it's it's smart but it's not quite smart enough to fully Gro what we're trying to do but I think we're off to a good start and um so I'm going to pause the video here because my my goal is not to overwhelm you with doing a whole lot at once I'm also not trying to overwhelm myself so what I do want to do is I'll come back over here all this is up here so I've got the open aai documentation and the readme I've also created a really simple diagram with the help of chat GPT to kind of give you a very simple idea as to how the the the the structure will work and they're all colorcoded so like executive agent one is the purple branch and so then it owns every other thing under its Branch um but so this would be tier zero tier one and tier 2 but yeah so uh other other aspects of the re repo I've got issues um oh I've got issues all right no kidding um then we've also got the discussions tab um so yeah if you want to jump in uh jump into the discussions I'll add a contributing uh document as well just so that way you can get a little bit of guidance but but the rule of thumb is start with discussions go to issues then go to poll requests if you just open a poll request without uh proper documentation or discussing it it's probably going to get rejected um but yeah so thanks for watching I hope you like this and uh guys let's get excited let's let's let's figure out how to build this um because we are so close all right cheers