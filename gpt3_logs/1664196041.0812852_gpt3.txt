The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: hey everybody david shapiro here with a quick video well i think it's gonna be quick um i've had a few requests for something that's pretty similar um also let me make sure the sound is good okay cool you can hear me um something that's pretty similar so one person asked for something to uh like summarize um documentation another person asked for like summarizing notes of um some type you know basically creating executive summaries um this is already a solved problem but there's enough people asking for how to do this i figured why not make a video on it um so we're gonna do recursive summary summarizer um public add a readme and license mit um so basically all we're going to do is create a loop so there'll be an input document um and then uh we'll break that down into chunks using using the module text wrap and from there we will um we'll just summarize each chunk and put it together and what you can do is you can rehearse like you assemble all those chunks and you can recursively summarize it again and again until you end up with you know something that's unrecognizable basically okay so get clone summarizer okay so let's open up my c drive recursive summarizer there we go let's open another one add my get ignore and my openai api key just start with some boilerplate stuff and then in auto muse i did use a recursive summaries hey look at that um i did not use text wrap in this one i think it was in book to chunks yeah okay so import text wrap so basically import text wrap so what this does is um you give it just a block of a string and it'll break it into um chunks of strings that are more or less the same size um so let's go to recursive summarizer and let's just this will probably be like one thing so we'll just do um recursively summarize dot pi um and so then what we'll do is i'll have a let's start with a book let's see what's the shortest one we have here alice in wonderland cool we'll start with that um alice in wonderland we'll go back to here so we'll copy that we'll just call this input so that whatever you do you'll have input.txt and then output.txt so this is a technique that i've used um i had a contract a um an operating agreement for a company that i had to read and it was an 80 page document i was like i don't want to read 80 pages it was like 60 000 words 80 pages so i'd use this technique and i summarized it down to like 15 000 words so i made it a quarter as long obviously i'm not going to show you people on the public you know this private you know legal contract but i can show you the same principle and we'll go from there okay so we've got input recursively summarize text uh so on and so forth i'll copy my open file function just because it's super useful [Music] and then also save file because also useful okay so whoops if name equals main so this just says this is our main function um we want to what do we want to do who's bugging me okay sorry muted my phone um lost my train of thought right we're going to open a file let me make sure that i do it right book to chunks so chunks equals yes all right so here's here's basically what you do um uh let's see all text equals open file and we'll just do input.txt so whatever you want it'll be this name um you could make this into a command line argument thing um i personally don't like doing that kind of thing um but you're welcome to make this a command line based tool if you want oh yeah we're going to need to do this as well our open ai key okay so all text equals that and then chunks equals let me make sure i do this right text wrap there we go okay so we could just call text wrap and then dot wrap and then we put this here so we're going to do a little bit longer of chunks we're going to do 4 000 um chunks because we're just doing one summary each and then another thing that we're going to need to do is let's see result equals list so we're going to have a list of strings as the final result um [Music] and then let's see for chunk in chunks we will then summarize that so i need to grab my my gpt3 completion function and put that up here and again i just i recycle code all the time you get a function that works you just copy paste it add infinite item so then we'll do import os import um no from time import time sleep because those are two things that i need for that to work oh and then we need a prompt so we go over here let's just go to um here selection all right that's about 4 000 characters so how how do we want to how do we want to summarize this so we'll say we'll start with write a concise summary of the following and then we do concise summary and we'll leave this on point seven so that it can be creative um okay so it says in this passage roger chillingworth and reverend dimmesdale discuss the secrecy of some sinners dimmesdale argues that some men keep their secrets because they hope to redeem themselves while while chillingworth suggests that they are simply afraid of being found out the conversation is interrupted by the sound of pearl's laughter and they watch as she plays in the cemetery okay that seems good to me um let's see before roger chillingworth can answer they heard the clear wild laughter of a young child's voice yeah i'm taking a handful of these um let's so i had this idea because okay this is a good concise summary but um let's see write it write a concise summary of the following be sure to preserve preserve um important details so then we'll add concise summary with details so let's see how much how different this is so let's copy this so that we can save it so this it goes from it went from 4 000 characters to 376 so that's a factor of more than 10 um in terms of reduction but if we say let's keep some details let's see how that is hester print and her daughter pearl are walking through the burial ground when pearl starts skipping and dancing around irreverently hester doesn't stop her but merely tells her to behave more decorously brolin starts arranging burrs along the lines of the

CLEAR ESSAY:

==========

In a quick video, David Shapiro demonstrates how to use a recursive summarizer to create executive summaries. He explains that the summarizer will break down a document into chunks, summarize each chunk, and then assemble the chunks into a concise summary. He shows how to use the summarizer on a book, Alice in Wonderland, and notes that it can be used on any type of document.