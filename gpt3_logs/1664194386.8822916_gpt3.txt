The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: the conversation block and ask a follow-up question so then once we have the follow-up question we can then use the same logic that we had here to um to ch brain come on we're going to index the content of this wikipedia article and then we're going to um we're going to search it okay and answer the question so then what we'll do is we'll do answer equals um we'll do answer question and we'll pass in the wikipedia article oh wait we actually need to do question and the question and i think that's all we need to do because the question will be generated here um generate a specific follow-up question [Music] to to um to use to query the external information and then we'll do um generate a uh a search query to find external article in the wide world okay add a couple comments just because this is becoming a really big block let's see get user input and vector and then we'll say search conversation for um for previous relevant lines of dialogue okay that's good so we'll get the answer for answer question answer question and so then we'll pass in the article and the question so then what we'll do is we need we've already got text wrap so we'll basically do the same thing we did here but i also need to open whoops no that was that was the correct thing build index so this is super super simple um basically all we do is um we cut this into chunks so when we come in here we'll say chunks equals text wrap and instead of alt text we'll do article and then we'll do it in let's do smaller so we'll do 2 000 characters and then for actually i guess we don't even need to index it because we're just asking the question so this will be a little bit simpler because the reason so in um in this one the reason that i did it the way that i did is because i was basically saying like okay let's go ahead and index an arbitrarily large thing because if if you're if you have like 150 entries or 150 000 entries you need to be able to search that database um and then answer the question but in this case we're already zeroed in on one article so we don't you know we don't need to answer the whole thing um so in that case what we'll do is we'll just go ahead and skip ahead to answering the question [Music] and we'll probably just copy this this prompt let's see which was it prompt answer yeah use the following passage to give a detailed answer to the question that's great so we'll just save as and we'll come back to our long term chat and we'll call prompt answer okay and so now that should appear here prompt answer okay and close that because we don't need it and then 4 chunk in chunks prompt equals open file replace passage with we're going to replace that with chunk and we're going to replace query with question okay and to keep it consistent let's name it the same thing so we're gonna do question is question um so basically what we're gonna do is we're gonna cut up um yeah use the following passage to give a detailed answer to the question oh actually i guess i probably should search it because um the answer might not be right like fall of yeah see also fall of the western empire yeah okay because the answer might not be in it um so let's add something use the following passage to give a detailed answer to the question if the answer is not present um in the passage just write not present okay detailed answer or not present all right so let's test this real quick so what we'll do is we'll come here and we'll say okay so the question is and um oh darn hang on i need this question wait give me the question okay so we copy the question and then let's go here so we'll say okay and question okay so this is our question what made romulus augustus the last emperor of the roman empire so the passage we're going to have a small chunk and actually i think i think i was wrong i think we should go we should make this a little bit bigger because many wikipedia articles will fit and i'll say 4000 tokens is 16 000 characters so let's say like 10 thousand because if the whole thing fits great if not we'll skip it and then let's go back here and just grab a chunk um so like name here we'll just grab the summary and see how it handles this okay passage detailed answer or not present okay hey is that there yeah all right so the answer was there let's see if there is a section that it doesn't have it ancestry and family so let's just grab this section because it looks like the answer will not be okay because we wanted to be able to say not present he was the last emperor of the roman western roman empire because he was the last emperor of the western roman empire wow the floor is made of floor thank you okay so it didn't really work there um but at least it didn't it didn't give me too much information um so that that's not that's not too bad okay so then we'll say answers equals list because here's here's a fun here's a fun trick so then you say answers dot append list whoops no not list answer and then what you do is you have one final summarization step [Music] so let's get this and i'll show you what this does [Music] all right so we got that answer and then because oh darn okay that's fine um i like i liked it's uh it's original one better let's see if i can do was it ctrl shift z there we go okay so we'll take passage and we'll take um what was it his legacy or no it gave me a good answer from just the introduction okay so we'll do that and then okay so it gave me a shorter answer that's fine so we'll accumulate this here so let's let's ask this question of a couple more spots so we'll do ancestry and family just so that way we can i can show you that like if you have different answers then or or different things the gpt3 is still pretty good at like summarizing it together yeah so that's not even remotely relevant okay so that's fine arrestees question what made a romulus yep okay so then we'll do last one in rain so we'll just basically what i'm doing is i'm pretending that um that this article is much longer and that it's

CLEAR ESSAY:

==========

The following is a more structured and clear essay based on the unstructured video transcript by David Shapiro.

In order to generate a follow-up question, we can use the same logic that we used here. We're going to index the content of this Wikipedia article and then search it in order to answer the question.

To do this, we'll first need to get the user's input and vectorize it. We'll then search the conversation for previous relevant lines of dialogue. Once we have the follow-up question, we can use the same logic to query the external information and generate a search query to find an external article.

Once we have the external article, we can prompt the user to give a detailed answer to the question. If the answer is not present in the passage, we can simply write "not present."

This process can be repeated for multiple passages, accumulating the answers in a list. Finally, we can summarize the answers in a single passage.