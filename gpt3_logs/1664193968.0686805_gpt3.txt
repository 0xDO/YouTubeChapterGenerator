The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: prompt equals open file prompt summary yeah replace chunk with summary chunk so basically what we're going to do is we're going to ask it to summarize the summaries and so what this is going to do is wait did i already do that here prompt equals open file oh this is the full prompt okay if oops if summary is too long um summarize it okay so since we're sequentially adding summaries one after the other um what it'll do is the older the summary is the more like so like this one well here let me just show you this will be easier let me just show you keep it simple all right so we'll do summaries okay so let's just open the first 10 summaries okay so alice's adventures in wonderland is a story by lewis carroll so what will happen is each of these will get end up getting added in sequence and once this is over 1500 characters the this algorithm will summarize it and so then the oldest ones will end up getting summarized repeatedly see see what i'm doing here so since it gets summarized repeatedly the the older the information is the more it'll be summarized so the more it will have decayed um and uh since it since since it'll have this like kind of time decay i'm hoping that that will keep it keep it smaller okay so that's fine but this also means that for every summary where if the summary gets too long we're going to summarize the summary which means a lot more calls to openai so it will get a little bit more expensive another thing that i need to do that we're going to work on is we're going to um shorten these uh these outlines because like the outline for sherlock 2200 characters that's that's a lot but um pride and prejudice that's 3 400 characters that's too dang long um great gatsby 1800 that's probably okay frankenstein 2300 that's pretty long alice in wonderland 1400 that's a little bit better um because the thing is um with the with the with the outline or the premise all you need to do is kind of have a guiding star for how the story is going to go you don't need to give it too much detail okay so now that we are hypothetically oriented to the plan also let me make sure we're still getting audio yes good can you hear me now um where was i i accidentally closed the summarize okay because i was copying my old code and we needed to do this because there is something funky going on with the stuff downloaded from gutenberg it all should be in utf-8 but it didn't yeah so and what i did was last time i found out that i needed to encode it to ascii and then ignore errors and then decode so that'll just put it back into a normal text string that fixed it okay great and then response equals gpt3 completion response except what we'll do is we'll just do prompt okay so if the prompt or if the summary is too long we'll make it shorter so that should fix that part um let's save this um because you can see that this was two megabytes so we'll save it as novel two so it doesn't get overwritten because you see here we're just gonna overwrite it um yeah so there's that and then let's work on shortening the outlines okay um this one's fine we can still make it more more compact so we'll just put it all in a single chunk oh sorry my dog needs to be let in pause okay and we're back sorry about that um [Music] so we're basically trying to um reduce the the word count or the character count as much as possible but also it'll just be in a nice paragraph because if you look at the um if you look at the uh the which mccollum's that i made the plot uh plot synopses one two three one two three then um you know gpt3 just tends to not write in bullet points it also sometimes so here's the thing sometimes gpt3 handles lists really well i if you have a labeled list so what i mean by a labeled list is like um you know describe a company so a labeled list would be like location and you'd say like north dakota um name would be like joe's emporium or whatever and then you'd say like uh established um we'll say like 1848 or whatever so if you if you gpt3 is really good at ingesting information very quickly if you use a labeled list like this but if you use numbered lists gpt3 doesn't seem to understand it as well so numbered lists are more for human brains gpt3 doesn't really it doesn't really care about numbered lists and i'm not sure why um so but if you give it like a natural language paragraph it seems to understand that a little bit better um it might just be that that's a uh an artifact of the training data um like maybe like it just didn't ingest that many um uh examples so we we can we made this more concise by about 100 or 200 characters um but then what i wanted to do is show you the edit feature um let's see reduce word count word economy so let's see how that invalid url hmm i wonder if that's down text davinci edit okay it might be down that's fine um reduce the word count of the following passage without losing detail um apply word economy yes i know follow winga um and then um new version with fewer words um is the whole thing down right now status says operational no incidents i don't know what to do uh okay let's just save that real quick and we'll do a full refresh maybe if i log out and then back in and we go back to playground hey there we go you can tell i do technology have you tried turning it off and on again that's literally all i did okay this doesn't look like it really did much word economy the novel begins with a series of letters from robert walton like there are so many like ways that you can make this concise um i guess it removed a series of letters and just letters okay fine i know it might contain sensitive content okay so let's see frankenstein so 2236 down to 2181 okay that's not so bad so let's do this iteratively so let's then take that output and ask it to make it concise again um and so you see like we're down to like 434 tokens um so that means that uh that means that we're getting uh more more efficient because also since we're going to have to send this through repeatedly

CLEAR ESSAY:

==========

In order to reduce the size of our training data, we are going to ask the algorithm to summarize the summaries. This will keep the information smaller and more manageable. Additionally, we are going to shorten the outlines for each novel so that they are more concise. This will help the algorithm to understand the plot better.