The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: let this run i'll figure out how to uh pick up where it left off and um we'll go from there be right back all right um this is getting rough so i'm gonna have to split this up into two parts but let me show you what i've got so far so first let's just step through the data because that i think will help i've only got a few scripts so i've got the summarize chunks prepare json l and the book to chunks so the books start here this is like the super raw data it's just a gutenberg book it's plain text there you go nothing special there so let's close all these to clean it up all right so we start with books right then we break that into chunks and each chunk is 1500 characters long um 1522 why is it 1522 whatever it was supposed to be 1500 characters long close enough they're all the same length more or less i'm not sure exactly how that um text wrap does does its thing anyways more or less the same length broken up into chunks so because basically think of it like an inchworm the idea is you write one paragraph at a time or so um so that's the idea all right so we take the books we break it into chunks then we summarize each chunk and so each of these summaries is nice and concise very short um oops don't need to go there you don't need to see all the research i was doing to try and figure some of this out okay so then we've got the summaries finally so we got oh we also have the outlines sorry um the outlines which kind of outlines the whole story just so that that way it knows what we're trying to achieve okay so finally we put all that together in a prompt um so here's the the full prompt so basically we say okay here's the outline here's the story so far and here's the last chunk and we're asking it to produce the next chunk so what i did was i saved all those out to the same file names this this just makes it really easy but one thing you'll notice is that these files get progressively larger um so whoops didn't mean to close that so let's see which one is the shortest one i think alice in wonderland is the shortest so the very first prompt outline alice is sitting in in the river or sitting with her sister by the river so cool that's fine um story so far alice adventures in wonderland is a novel by lewis carroll that's fine last chunk so last chunk is like what what it's so the the last chunk is that is the full prose and the story so far um this one because it's the very first one um just has the uh has the summary of this um yeah and so then the next chunk that we're going to ask it to produce is going to be the same as so notice that uh this prompt or this this one is 0 0 0 1 so the next chunk that we're going to match it to is so we've got another folder called completions so it's going to be here so alice was beginning to get very tired and so what we're asking it to do is um very tired uh beginning to get very tired of sitting by her sister on the bank so you see it it just continues right along and so by having the pairs of prompts and completion so you see there's the prompt and that's what the prompts look like and then the completion that we want it to achieve same exact file name so it's easy to pair them but so this is the first one but let me show you how big the last one gets because it's accumulating and this is um this is this is the biggest problem um let's see so the completions are the same time same size each but the prompts so the first prompt is 4 kilobytes the last prompt is 12. so the outline stays the same length that's fine story so far you see it's getting longer and longer oh but wait there's actually new lines so finally you know the the summary gets super super long so instead of just being this first one because you remember you know the queen's croquet game this is where the first one ended so what i'm doing is i'm accumulating them all right here so it's a summary of the story and so instead the summary is now 11 000 characters long typically for the original da vinci it would average about 6 000 characters with is 2 000 tokens um so we're way way over that we're about twice what could fit um and and and we still need to get the rest in um the the the last chunk so that was just the length of the summary um all told oh and also not just the length of the summary and the the last chunk but the next chunk has to fit into that completion as well so these are just way too long but i've got the data so i've got the um oh that's not the right file delete that one it's novel.json l so this is a two megabyte file and this is what it looks like so it's just this huge mass of json-l okay so that's about as far as i'm going to get today this code will be up on github i'll come back to this soon i'm exhausted okay so basically what i need to do is let me show you what the script does that accumulates this so the script that composes the json l is right here it's called prepare json l it's really simple so basically what i do is i grab all the books in the directory called books ta-da grab that there instantiate a new list and this is what i'm going to accumulate all the samples in so four book in books so we iterate through each book iterate through each one of these we grab the name of the book and then from with the name of the book we grab all the summaries that are in that book so then we go to the summaries tab or a summaries folder so it's like okay so if we're starting with alice in wonderland we just want the summaries that have alice in wonderland in the name so that'll give us these 41 summaries oh and also they get really big and this isn't even done this is just the first 40 41 sections pride and prejudice has over 500 sections so how the heck are we going to summarize that that's going to be difficult because you're basically going to have to like super super ultra paraphrase it [Music] i don't know if it's going to work but because we're working with a very narrow window and so this is why i laughed at the beginning of the video where i said you know

CLEAR ESSAY:

==========

In this video, I'm working on a project to generate new chunks of text based on an existing story. I have a dataset of Gutenberg books, which I'm breaking into 1500-character chunks. For each chunk, I'm summarizing the content and creating a prompt with the outline of the story so far and the last chunk of the story.

The problem I'm running into is that the summaries and last chunks are getting too long. The first prompt is only 4 kilobytes, but the last prompt is 12. The summary is 11,000 characters long, and the next chunk has to fit into that completion as well. So I'm struggling to find a way to keep the data concise while still providing enough information for the model to generate new text.

Any suggestions would be greatly appreciated! Thanks for watching.