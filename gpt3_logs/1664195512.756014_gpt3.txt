The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: morning everybody david shapiro here um let's see what am i doing so i just got a whole bunch of my books ready and apparently i'm the kind of person that i always have to be working on something so i started on my next book um you y'all are basically gonna watch me write this um as i'm doing my research um because why not okay so taking a big step back um uh the meragi is something that i started on in late 2017 or early 2018. i don't remember exactly but it was about four years ago um it is the microservices architecture for robotics and artificial general intelligence that's exactly what it says on the tin meraki is an acronym let me zoom in just a little bit so you can see and i created a logo for it uh it looks like this guy um and so this logo is really simple it's a star star topology so the absolute first thing to know about meraki is that it is a star topology here in the middle you've got the nexus and then you've got a whole bunch of other microservices all talking only to the nexus again you know i pick very simple names so um i've got the book it's starting to be outlined um high level overview architectural components so if you've been keeping up with my videos you know that um we've got the nexus running and i've got an embedding service running and then i've got a simulation service running and finally i've got the imperative service running and i've actually got them all running in the background right now so here we have the the embedding service where i'm using google universal sentence encoder five and so it is this is what i'm using to do embeddings because one it is fast and two it is free it is way faster than open ai and gpt3 and it is more than sufficient because it generates 512 dimension vectors so it's fast free what more can you ask for here's the nexus which the nexus is that's the central repository so basically the point of the nexus is to model the human stream of consciousness so if machines are ever considered conscious this is where it's all going to happen if if a thought or sensation or memory needs to be conscious if the if the if the machine needs to be consciously aware of it it needs to end up in the nexus so that's what this is and what you're seeing is a stream of consciousness as this machine goes through this imaginary scenario um and so in this case um the the the the hallucination that i have is um that there's two men playing chess in central park in new york city and they get in they basically get into a fight and then we're just seeing how it plays out the other service that i've got is the simulation microservice so this is where it's running you see like a man is playing chess in central park he loses the game this needs a little bit of work well it all needs a lot of work but what i what i need to do is get the whole thing running oh i don't have any output for the imperative service i'll have to fix that um so the imperative service is kind of like the moral compass um [Music] let's see so let's just do print i'll do new line new line and then suffering and then prosperity and then we'll do um understanding and then questions yeah we'll see um anyways so i've got all these uh up and running what i'm going to work on today what i'm going to try and work on today is the conductor microservice so the conductor microservice let's come up here i'll just show you um implements cognitive control um which also it doesn't really host the identity persona we'll say it guides guides the identity and persona aims for achieving its highest self it's morality its ethics and so on so every microservice centers around one particular purpose and the conductor like the conductor of a symphony orchestra has it does have one purpose one job but it is a complex multi-faceted job so the conductor is is concerned with ensuring that the whole cognitive architecture is behaving correctly that the system is stable that all the microservices are behaving as they're supposed to and what it the way that it determines like is this is the architecture behaving correctly um is in part does it am i adhering to my identity or my persona which in this case and for for what i'm working on means that it needs to adhere to its heuristic imperatives or its core objective functions um but in order to do that it's basically measuring the performance or observing the performance and then providing feedback to all the other microservices so this is actually going to be one of the most complex microservices to implement which is why i'm working on it now because it's going to take a lot of time and iteration um let's see so yeah gets advice from another man on how to improve yeah so you see this simulation is is going um it's kind of stuck on repeat oh well that's fine let's see we can go fix that so if we go to nope that's not it simulation service and then well i've got the python script open all right simulation service there was something there's a setting i could change yeah so we generate an event i think the event is the one that we need to um yeah rarity so um if we change if we change the event uh rarity so if we go here and i'll show you so generate event so given the follow scene imagine a rarity event describe the event in one or two sentences so backstory and scene is what we put in so see we say the last scene so it basically says like okay this is what's happened and then we have the story the summary of the story so far and actually i can show you what these look like simulation service gpt3 logs um so yeah so write a concise summary all right so that's a summarization um yeah and then we've got yeah so here we go um backstory a man is playing in central park scene the man continues to play the man slowly becomes a better player than the second man thanks to the second man's help so there you go that's a that's a very likely event um yep and then that's used to populate the next one so you see that here so you see the sequence of events right so i've got i've

CLEAR ESSAY:

==========

The Meragi is a microservices architecture for robotics and artificial general intelligence that I started working on four years ago. It is a star topology, with the Nexus in the middle and a bunch of other microservices talking only to the Nexus. The Nexus is responsible for modeling the human stream of consciousness, and the other microservices are responsible for different aspects of the overall system. The conductor microservice is responsible for ensuring that the system is stable and that all the microservices are behaving as they should. It does this by observing the performance of the system and providing feedback to the other microservices. The conductor is one of the most complex microservices to implement, and I am currently working on it.