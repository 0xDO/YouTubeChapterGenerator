The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: um so let's get rid of that okay so medication prognosis let's do diagnosis as well diagnosis was a diagnosis given um prompt bool diagnosis um and then diagnosis what is the diagnosis yes prompt list diagnosis okay and let's let's imagine what's a fourth task that we could do with this um prognosis diagnosis medication tests that was the other one because in a lot of these um you know in this case no medical tests no follow-up tests were ordered so determine whether or not um follow-up medical tests were ordered so let's see was they follow let's see were follow up tests ordered yes or no okay in this case no hmm list follow-up tests ct scan wait really the patient will be subjected to it oh oh all right i was wrong it was right look at that look at that okay see gpt3 is smarter than me thank you gpt3 i shouldn't make that voice that's insensitive to people with speech impediments okay so let's go let's go or as the young people to say lfg um okay so then we'll do context or follow up tests ordered yes or no dang dang um no this will be list um tests and then what we'll do is we'll just copy that and then remove that and we'll say the save this is prompt bool tests okay there we have it okay so now we've got eight prompts am i counting right yes we've got eight different prompts that we are going to um that we're gonna do um i don't want to bore you to death with writing up a script that will just go through and do these um so i'm going to pause the video i'll write a script to generate this input and output and then we'll be back excuse me that'll just be less pressure on me and less boring for you so time will pass and you will come back to see a finished script and we'll watch it run with um generating some of these outputs for the training data and honestly we're most of the way done already the the the data so as um as a senior data scientist i i he jokes that he is senior both in experience and age um told me once the hardest job for this is always getting the data the second hardest job once we're now that we're in the the realm of llms is prompt engineering once you have the data and the prompt engineers are engineered um you're 90 of the way done now it's just a matter of synthesizing it all and training the model and away you go so sit tight we're almost done okay i lied it's not quite as straightforward as i promised um it happens so basically what we have to do is we have to do some noodling to figure out how do we want the final product to look um and so what we're going to do is we're going to do just kind of like rough sketch so this is what's called a mock-up like if you're if you ever do agile or whatever you can use like you know crayons or whatever to design how you want a website to look but you can do the same thing for data so what i'm doing now is i'm planning how do i want the data to look um and so the example will be prompt and so it'll be like medical text and then new line new line diagnosis and then that'll be the end of the oh yeah i guess json l is double quotes not single quotes and so then it'll be completion um and so what the completion will look like is either um none found or um or list of medications so basically we're trying to um kind of consolidate it down and what i mean by that is if the boolean comes back as no then it's over then it's just the answer is none if it comes back yes then what we have to do is get that answer so we will have to record that as we go so that will be medical text so this will be another example n um oh wait diagnosis or list or diagnosis um and then medications and then we will say completion is none found or list of meds okay so this is the goal and i guess actually um yeah i think this is the format that json l follows i always have the script to generate it for me okay so this is what we're trying to do so since i got started let me go ahead and show you where we're at okay so this is super simple so far this is this is my standard approach so i've got a function open file save file it's very straightforward it's just reusable code i've got another function to handle the gpt3 completion and what it does is it strips off any excess and then it also saves it out to a log file because this is really helpful especially since i've got a whole bunch of stuff running in the background that i'm not necessarily watching it helps to be able to see like what it actually spit out um okay so let's see get the boolean answer and what we'll do here is um and so notice here it says it does the strip so if if it's no if it's no then that then the answer is done so let's actually go ahead and do result equals list so this is where we'll accumulate the final data okay so boolean equals completion.lower so if boolean is yes actually no we'll say no because that's the that's the easier answer so if it's no then we'll say um info equals actually we can just do result dot append and the answer will be so let's say prompt equals um actually i should probably just go ahead and open this medical text since we're going to use it twice equals choice um here let's break this up into several parts file and then we'll say medical text equals and we'll just copy this out open file medical text okay um read the medical file there we go uh okay and so if it's no then we know that it's done and so we'll say so the final result will be percent s which allows us to swap out a um a variable and then we'll go line new line um and then we'll say um oh i got to know which one it is hmm yeah because of what i do is i have a list of booleans a list of folders here or files so if if it's diagnosis okay so here's what we can do um yeah i gotcha this will be fine um where can i do this i'll just do it here so we'll call this the um the d mark so the demarcator is let me show you what i mean by dmark so this right here is the demarcation so this tells this tells the model that the input is done right and it's time to do something else um yep so what i'll do is

CLEAR ESSAY:

==========

In order to generate the training data for our machine learning model, we need to come up with a set of promts. For this task, we will use the following eight prompts:

1. Medical text
2. Diagnosis
3. Medication
4. Tests
5. Follow-up tests
6. Context
7. Test results
8. Completion

For each prompt, we need to determine the appropriate input and output. For example, for the prompt "Medical text," the input will be a piece of medical text, and the output will be the text itself. For the "Diagnosis" prompt, the input will be a piece of medical text, and the output will be a list of diagnoses.

After determining the input and output for each prompt, we need to write a script that will generate the training data. This script will take the medical text as input and generate the appropriate output for each prompt.

Once the script is finished, we will have a training dataset that we can use to train our machine learning model.