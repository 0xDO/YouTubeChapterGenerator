The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: good morning everybody this will probably be a short video today okay um so i got this idea from the uh from the open ai community where someone was asking for help doing reviews and imagine you've got you know thousands of reviews and you want to sift through them the old school way would be to do like bag of words vectorize cluster you know all sorts of stuff without actually ever looking at the reviews so what i did was i went out to kaggle and i found um you just search for like product review um and one of the first things that pops up is amazon product reviews 115 megabytes um i actually think that i got this one another thing place you can do is you go to datasetsearch.google.com it searches kaggle so like it's basically the same thing so you do uh you know product reviews um and hey look at that 34 000 reviews of amazon products um so there you have it it's it's i think this is the same file so i downloaded it and let me show you what it looks like um 300 or 260 megabytes of uh of reviews now these are a bunch of different products and you see it's you've got all kinds of stuff right so you got the you got the rating you've got um uh you've got urls a lot of this is irrelevant right the primary thing that i really want is the text the actual text of the review right because this is what people are saying um you know old school you could do you could you know aggregate numbers um you can look at you know which reviews are more popular but that's all math what we want is actual semantic meaning um so what i did was i cleaned this up so this uh this spreadsheet is you know very large very messy um so what i did was i deleted all the rows that i didn't care about um so i cut it down to just the product name the title and then the actual review text oops here let me and then the review text um because that's really all i care about is just what what is the product and then what it what did a human actually write because i don't really care about the number right people people give ratings somewhat arbitrarily um okay so that was that was where i started and then um so here's oh and one other thing is because the csv data i have no idea what the format was i had to come up to encoding convert it to ansi save it close it open it up and convert it to utf-8 because it would not play nice with python um so anyways here's what i did was um well here let me comment out some of the stuff um because i was experimenting without recording which i know i shouldn't do so let me just show you where we start so reviews list so this is just empty empty list and then we'll load reviews.csv encoding utf-8 as in file we'll we'll um we'll load it and then what i did was if if the row zero so that's the product name so that's what will appear here in this first part so fire tablet with alexa you know um and there's a whole bunch of different versions of the fire tablet but i wanted i wanted to get all of them together so it's like okay there's the the fire tablet for children there's the seven inch display there's the 32 right there are still fundamentally the same product so what i wanted to do was i wanted to get all those together and see what people think of the fire tablet um and so as if the row so we're we're we're reading the csv file so if the if r if element zero so that's the title if it contains fire and tablet and not charger because i realized some of the reviews were for just chargers and it's like okay well i don't care about a separate charger um then then that's that's what we want to look at so i just kind of opened the data filtered it all out so let me show you what this looks like let me increase the font size properties font 28 so you can see what i'm doing uh cd summarize and then we'll do python summarize reviews so this is real quick so i've got 14 000 reviews for fire tablets great am i going to read all those that's going to get real expensive if we do that no so one thing that happens when you um if you want a human to look at something you do what's called an audit so an audit is where you you you take a subset of of a hole and you say okay i'm going to look at a subset of these just kind of picked it random and see how well they match up and so what we're going to do is i'll show you i'll show you one pass so i import random seed so that that pre that that rotates the uh the random kernel um subset equals random choices and so basically what i'm gonna do is i'm gonna pick 25 reviews at random um and then here let's comment this out because we don't need it and then what i do is for those 25 random reviews i join them into a text block and then i'll show you the length of the text block so we'll just do this real quick so that you can see how many characters it is because the thing is is uh we have a limited amount of space in our prompt window so oops i gotta save it helps if you save it um so this is 360 or sorry 3600 characters uh let's run it again 11 000 characters so you see there's a little bit of variance there 11 000 should still fit that's actually the longest one i've seen usually it's around four to six thousand as the maximum um so yeah someone wrote a really long review um okay so you see it's typically in the in the 4000 range that's that's a perfectly reasonable number uh length of um of uh of of uh for a prompt input so then what we'll do is we'll open up a prompt and i wrote this real simple prompt i tested this online it works really well i'll show you an example um of of how well it works but is just write a detailed summary of the following product reviews what are the key features that people love and hate about this product and then you know you put in the reviews and then detailed summary so i usually put the instructions both before and after the information that i'm working on i found that this gives the most reliable results because sometimes especially depending on what's in here it might kind of confuse the model but if you if you sandwich it

CLEAR ESSAY:

==========

Amazon Product Reviews

In order to sift through Amazon product reviews quickly and effectively, I utilized the Kaggle dataset. This dataset contained over 34,000 reviews of various Amazon products. I filtered the data down to only include reviews for the Fire Tablet, as this was the product I was interested in. From here, I randomly selected 25 reviews and joined them into a text block.

I then fed this text block into a prompt, which asked for a detailed summary of the reviews. The prompt provided instructions on both before and after the information, to ensure that the model would not be confused.

The results of the prompt were generally accurate, with key features of the Fire Tablet being accurately summarized.