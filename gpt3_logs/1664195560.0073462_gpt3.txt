The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: focusing on their particular perspective and so that's why you need the conductor because the conductor is going to watch the performance of all of those different pieces of this symphony hence my book symphony of thought that's going to watch all of them and it'll say okay based on how everything is going this is what we should focus on this is oh that's another i need to add that um it's about attention cognitive control is also about attention um are we focused on the right things um tasks task selection and task switching um yeah so uh i guess the i guess the number one thing for for it to uh is cognitive control um that's what the conductor provides it provides cognitive control which is primarily um task selection and task switching um but how does it so the other the other questions is how does it choose which tasks take priority so that also implies prioritization and in that case the prioritization is based on the heuristic imperatives and identity so like say for instance you have your artificial cognitive entity and it's you know teaching children and suddenly a tornado drill um goes off you're going to want it to switch to focus to the danger of the tornado because now suddenly all the children's lives are at risk um let's see this video is getting longer than i thought i'm also just getting back on the horse so i might i might call it a day right here yeah let me cut this out too uh let's see let's see how long this is yeah we're at 25 minutes i think that's enough for for one day um [Music] getting all these running i'll go ahead and axe these and let's see so we kill all those um before we go i'll just let's see we didn't run the conductor service but we did run the nexus i've got everything saved here in the logs look at that sensor sensor heuristic heuristic let's see who is this today yeah it was just now um yep so basically all it's doing is heuristics and sensors um sensor input yep and gives him a coffee the man's mentor watch him as he drinks his coffee and starts to wake up you've come a long way i'm proud of you oh this is such a sweet story it looks it looks like this this this scene came to fruition now let's go they walk out into the bright morning sun each each step taking them closer to their goal it's a very sweet story um okay so that's that's where our story ended up and let's see what the heuristic imperatives did um increase understanding who's the man's mentor what is the relationship between the man and his mentor yeah so in this case the um the robot didn't even have never had any output so it's only just sitting there thinking like kind of as a ghost as a ghostly observer um so the purpose of this one of of heroes to comparatives question to increase understanding who is the man's mentor so basically this is an internal sense of curiosity the entire purpose of having a um a sense of curiosity is that that is going to provide some some emotive for not emotive but um some motive force uh for the for the machine to one either be primed to ask questions externally or ask her questions internally so that it wants to know and just by virtue of putting questions in the nexus the other microservices are going to pick up on that and say like oh yeah i want to know that um so it's really interesting because when everything is in the nexus because what remember what you're looking at right here um that's the imperative service what you're looking at right here is the machine's stream of consciousness so what we were just doing we were just running for the last 30 minutes almost actually just over 30 minutes um this was the machine thinking right some of it was the simulation right which is this is this is its sensory record of what it was seeing and then you have the heroes to comparatives where it's trying to increase prosperity so like the first the very first thing that my machine is thinking that this ace that this meraki architecture is thinking is how to be benevolent um it is a thought-first model of artificial cognition and so then the next thing i'm going to add is the conductor service which is going to be commenting on are we achieving our highest goal and then those messages will be picked up by the heuristic imperative service next time it runs and it'll say like okay i'm not doing well so let me modify my behavior and it's interesting because you have you basically are creating like neuro-linguistic programming um where you're programming without code you're programming with words so i just threw a lot at you like i said i'm working on this as a book um i've got uh i've got symphony of thought it's out with its second set of beta readers um it is 48 000 words it's going to be my longest non-fiction yet um yeah so chugging right along thanks for watching

CLEAR ESSAY:

==========

Focusing on their particular perspective is why you need the conductor. The conductor watches the performance of all the different pieces of the symphony (hence my book, Symphony of Thought) and says, "Based on how everything is going, this is what we should focus on. Oh, that's another thing I need to add."

Cognitive control is also about attention. Are we focused on the right things? Tasks? Task selection and task switching?

The number one thing for cognitive control is task selection and task switching. But how does it choose which tasks take priority? That implies prioritization, and in that case, the prioritization is based on the heuristic imperatives and identity.

For example, if you have an artificial cognitive entity that's teaching children and a tornado drill goes off, you'll want it to switch to focus on the danger of the tornado because now the children's lives are at risk.

This video is getting longer than I thought. I'm also just getting back on the horse, so I might call it a day right here. Let me cut this out too.

We didn't run the conductor service, but we did run the nexus. I've got everything saved here in the logs. Look at that! Sensor, heuristic, sensor, heuristic. Let's see who is this today. Yeah, it was just now.

Basically, all it's doing is heuristics and sensors. Sensor input, and gives him a coffee. The man's mentor watches him as he drinks his coffee and starts to wake up.

You've come a long way. I'm proud of you.

Oh, this is such a sweet story! It looks like this scene came to fruition now. Let's go. They walk out into the bright morning sun, each step taking them closer to their goal.

It's a very sweet story.

 Okay, so that's where our story ended up. Let's see what the heuristic imperatives did. Increase understanding. Who's the man's mentor? What is the relationship between the man and his mentor?

So in this case, the robot didn't even have never had any output, so it's only just sitting there thinking, like, kind of as a ghost, as a ghostly observer.

The purpose of this one of the heroes to comparatives questions is to increase understanding of who the man's mentor is. Basically, this is an internal sense of curiosity. The entire purpose of having a sense of curiosity is that it provides some motive force for the machine to either be primed to ask questions externally or ask questions internally. So, by virtue of putting questions in the nexus, the other microservices are going to pick up on that and say, "Oh, yeah, I want to know that."

When everything is in the nexus, what you're looking at is the machine's stream of consciousness. So, what we were just doing, we were just running the heuristic imperatives for the last 30 minutes. This was the machine thinking. Some of it was the simulation, which is the machine's sensory record of what it was seeing. And then you have the heroes to comparatives where it's trying to increase understanding.

So, the first thing the machine is thinking about is how to be benevolent. It is a thought-first model of artificial cognition. And so then the next thing I'm going to add is the conductor service, which is going to be commenting on whether or not we're achieving our highest goal. And then those messages will be picked up by the heuristic imperative service next time it runs. And it'll say, "Okay, I'm not doing well, so let me modify my behavior."

You're basically creating neuro-linguistic programming, where you're programming without code. You're programming with words.

I just threw a lot at you. I'm working on this as a book. I've got Symphony of Thought. It's out with its second set of beta readers. It is 48,000 words. It's going to be my longest non-fiction yet.

Yeah, so chugging right along. Thanks for watching!