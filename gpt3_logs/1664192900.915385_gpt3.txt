The following is an unstructured video transcript. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: we'll get rid of that so vector equals gpd3 embedding the text so that's the query scores okay so for i in nexus index um so we'll actually call this data we'll just replace that with data all right so for i and data if i equals vector this is identical skip it we don't need to worry about that because um we don't have we're not worried about sequential memories in this this is not a robot or anything like that so score equals similarity between our our query and the actual um what we're looking for okay and the vector is the right name okay uh we don't need file name so this will change this to content content oops um yeah so basically what we'll do is we'll just create a similarity score for all of them ordered equals all right so content and score so after this because once we get the score we don't care about the vector anymore we just say okay we're going to create a new um we're going to create a new list that'll be the same length as our database but we're going to sort it by um which whichever one is closest um let's see we don't need that because we already have the content and we're just going to assume that because we know our database is longer than 10. um so basically why i'm saying 10 is we're just going to say okay so if we have 10 chunks that are 4 000 characters long that's 40 000 characters which is roughly 10 000 tokens and so we know that we have to solve the problem of what if we have even after searching we have a larger corpus then we can feed into gpd3 in one go how do we handle that so with that in mind um what we're going to do is we get the results so this is a much compressed search where we're going to end up with 10 results that that could answer the question actually let's make this a little bit more challenging do 20. um so we'll have the top 20 chunks of text that should answer our um our question now the longer your question is the more specific your question is the better the search is going to be okay so results equal search index query and then we pass along the data which the data is our master index so that's this here which has the entirety of the supreme court opinion um paired down into vectors okay so with that we then have to ask actually ask or answer questions so this is where we get into prompt engineering so let me go to playground and we'll go grab um let's just grab an arbitrary chunk of text yes login that's fine all right so this is where um uh let's see answer the following question um let's see answer the question uh the blah blah from the passage um no use the following passage to answer the question okay so question and we'll figure that out in a second um actually no we'll do it in passage um actually no here we'll do question first so that you knows what the question and then passage and then answer okay so the passage is this so this is probably we'll do all right so let's think of a question that would um two cases arrived within the word balance scare quotes um the majority is a dirty word moderation is a foreign concept the majority would allow the states to ban abortion because it does not think um forced childbirth what equates to quality and freedom um okay so the question will be why did the courts um uh decide um to uh allow states to ban abortion all right so that this is a question that is partially answered by this this thing um so then let's see how it just answers this is just right off the cuff and so you see oh so remember i said these are 4 000 character chunks and you see it's right at 1 000 tokens so that's 8 cents could be cheaper could be more expensive whatever answer did it give up oh there we go according to the passage the courts decided to allow states to ban abortion because they believe a woman's freedom and equality are not involved in the decision to bear a child ouch okay um yeah um because we're because we're making it concise let's add um use the following passage to um give a detailed answer to the question um so we'll say detailed answer because here's the thing we're going to basically recursively answer this several times and so we'll consolidate it down so let's see if this is any better or different oh this is good okay wow yikes shots fired okay i like this better so we'll use this as our prompt um because again the idea here is not to summarize it as concisely as possible the idea is to extract information from a much larger document and pare it down and because we're gonna we're gonna basically take the top 20 we're going to need to pare it down a few times so this answer was about 200 tokens so if we take 20 times 200 that's 4 000 tokens so that's still going to be like a full thing and that's that's assuming that it doesn't actually make it much longer because some of the answers might be might be longer okay so we'll do this this will be our question answering prompt um okay so passage we'll remove this so we'll do passage detailed answer okay and so this will be um prompt answer okay so this is our this is our first tier first level of of answering and so what we'll do then is for all 20 of those top results we'll ask the same question and then accumulate those answers together and kind of summarize them all together to kind of merge it into a single thing okay so here's how we're going to do that we basically will borrow the recursive summarization um thing that i've done before um so let's open this recursively summarize yes yay fine um and actually i think we will need the prompt here as well yeah write a concise summary um yeah yeah yeah yeah okay so that's that and then we'll also need the gpt3 completion so we will need this um so let's grab the completion okay so with those results so four for result in results um then we need actually here um answers equals list prompt equals open file this will be was it prompt answer dot text dot replace passage with um and that'll be result dot uh content yeah yeah okay so that should give us the answer and then the answer equals gpthree

CLEAR ESSAY:

==========

The court decided to allow states to ban abortion because they believe a woman's freedom and equality are not involved in the decision to bear a child. This is according to the passage. The detailed answer will be given by the GPThree completion.