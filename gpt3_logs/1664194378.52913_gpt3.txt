The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: okay so in this function because when you're when you're searching for something you don't always know if it's going to be if it's going to work so def fetch wiki title and so what we'll do is we'll do try page equals make sure i get the syntax right wikipedia.page title so if it works we'll just pass this back return page if not this will error out and it'll say i don't know what you're talking about it'll say it exactly like that too except if it doesn't work we'll do search equals wikipedia dot search title and so you see the syntax for that here where you can do a search and it'll return a list of possible um articles and so like in this case it's like barack so it's like do you mean barack obama presidency of barack obama barack the brandy barack the given name um i have no idea how i'll probably just pick the first one so then we'll do page equals wikipedia dot page and we'll do search zero so i'll just assume that like return page um i'll just assume that it it it returns you know the the first one is going to be most relevant like i said this is i'm just showing you the proof of concept um okay so then so we've got the wiki that will return it oh i also need to import wikipedia import wikipedia and then do i use os anywhere import os i probably do okay fetch wiki okay so we get our relevant wiki so then what do we do with it well we found romulus augustus this is way too much text right this is way too much to um to uh uh put into a gpt3 prompt so what do we do well i'm glad you asked that's why we have this the the the document answering thing um so you know what let's just go all out let's let's let's hit this um i was gonna do something simple but no let's uh let's go let's go whole hog um all right so we've got the uh the wiki content um let's see what is it if we go here we do if we want to look at the whole content where was it summary search page content that is okay so we just do dot content so that'll give us just all the text from that particular article and so then what do we do well i'm glad you asked so let's go back to our playground and we'll say um read the following conversation and um and and write a list of uh of well we're asking questions because basically what i'm thinking is we want to we want to query this document right um for interesting facts right life in exile um actually like the questions we should ask are not necessarily obvious from this so we get romulus augustus um how should we handle this because if we let's say this conversation leads to this and i don't know what i'm asking so federation um because if we if i use my multi-document answering thing and we query it like we got it we got it we basically we have to like we have to be there has to be something we're looking for unless i just want to summarize it but i don't know if i want to do that because i want to summarizing is good and all but if you get if you answer a question you get much better but but the problem is if this is a this is a chicken or the egg problem or putting the cart before the horse because if you don't read the thing and you don't know what the information is you don't necessarily so there's there's what i call a naive question so like if if you don't know anything about something you ask naive questions right and naive question is just like um well here's a here's a perfect example um who was the last emperor right i had to i had to already know that rome had emperors right so that's that's a that's a semi-naive question um it's like okay so romulus augustus whereas if i ask so this this is a super not naive question right um because i knew that there was a virtuous roman man that there was this concept in ancient rome but how how do you ask the question to even get to the right question so we need like meta questions but gpt3 is trained on all this stuff so maybe it could i don't know i wonder i wonder i wonder um follow-up questions to search the internet um before yeah that's fine we'll just do search the internet because it's like um list let's see list of follow-up questions to add to the conversation and then let's just see what it does what caused the fall of the western empire oh wow okay what was life like for the average person in rome this is great um it's not really staying on topic though because if you ask these questions it's not that's not going to be information whoops that is that is necessarily here let's see given the following conversation and the selected topic so we'll do romulus augustus write a follow-up question um to ask uh no because if we look at this like what is the kind of information that i want to extract from this right like the summary of of this dude's life or what did he do write a follow-up question to ask follow up question to ask about romulus augustus let's just see what it does that's not a bad question okay i have to run to the i have to take a quick bio break so i'm gonna pause and then we'll be right back i think this is what we'll go with all right and we're back where were we oh yeah okay so we've got the follow-up question so because we we we have identified where do we go um so we look in here um we identified we use we used our wikipedia prompt to to get a particular topic right so we get that um we then we get we we i wrote a quick thing just to go fetch an article so we'll get it and then what we'll do is we will do a follow-up question so we've got a topic given the following conversation and the selected topic so we'll do [Music] topic and then we'll do block and we'll do one follow-up question to ask about and we'll do topic okay and we'll do prompt follow-up okay so then what we do is we go to here and so we say control d for duplicate and so then we'll do prompt follow up and we'll replace the block with convo block and we'll also do replace topic with the title and so that what that'll do is that'll take this and populate it with the way that it looked up here right so it'll just say okay let's populate in

CLEAR ESSAY:

==========

In this function, we are searching for a particular topic on Wikipedia. If the page exists, we return it. If not, we search for possible articles and return the first one.

We then take the wiki content and extract all the text from the article. We then ask follow-up questions about the topic to extract interesting information.

Given the conversation and the selected topic of Romulus Augustus, we ask a follow-up question about his life in exile. We then query the document for interesting facts and summarize the information.