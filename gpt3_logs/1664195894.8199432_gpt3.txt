The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: see how text is used in multiple places that's bad form so what we're going to do is we're going to rename this and and we'll call this text block because that's a little bit more specific about what what it is that it is so this is the conversation this is the text block of the conversation so we'll do that and this will make the prompt is going to look just like this now there's one last step missing so uh fortunately da vinci is this this one is aligned well enough so that it knows once it sees a couple of messages back and forth it knows what format to follow however we don't want to rely on that so what we're going to do is we're going to add just a little bit to the end of the prompt so we'll say prompt equals prompt plus we'll do one more new line jacks and so basically what that'll make it look like is this so it we're basically we're basically priming the next line because one thing that can happen this this is doing pretty well not to do this but one thing that can happen is if you don't have this here it might like continue the user's side see how what it did here is if i took out the um the question mark it added in the question mark for me and then continued with jax but let's say you didn't want that um and you just say jax see it's a little bit different so you got to be very careful about the text that you pass back okay so we we uh we we load our prompt we populate it with the text block of the conversation and we say okay jax you're up so now what now we do response actually here we've already got that code here so response equals gpt3 completion prompt so this is going to be jax's answer and so what we'll do is we will do print jacks and then we'll do comma response so print allows you to print multiple variables at once so we're basically printing two string variables and when you put a comma between it it basically just acts like a space it won't work if you do this because it's like i don't know how to how to view these two things so we just do jax comma response great so but don't we need to accumulate jax's end of the conversation in the text block and the in the list absolutely because if we don't it's just going to talk be talking to itself and our it will we're only right now we're only recording our side of the conversation um okay so then what we'll do is we'll do conversation dot append and we'll make this look exactly like this one except we'll change this to jax and we'll change user input to response there you go um all right so we're just about done and ready for testing um one thing that is important to note here you see how it added a couple new lines so for whatever reason gpt3 will sometimes do this where it'll it'll add new lines um between stuff and we don't want our our our text message to get all scattered we want it to look like this so how do we do that um i've got that i've got that covered right here with this little function i think i mentioned it in the previous video so it always will cut out any excess space around it now there's one last thing sometimes what happens is is gbt3 will just it'll have the whole conversation on its own right um it'll just it'll it'll try and fill in the position for the user and jax and so we want to do is we want it to stop if if gpt3 ever generates these tokens user or jacks and so what we do is we'll add those right here so jacks and then user i could have just typed it out i guess that's five characters i should have typed it out okay that's fine so this will basically tell gbt3 just in case do not have this whole conversation for me because what i can do is i can say um if we change this to imagine a conversation between user and jax what'll happen is it'll do the conversation for me well sometimes it will okay this prompt isn't causing it to do that but sometimes it will i wonder if it'll do it if we if we turn the temperature up there we go see how it completed it for me so sometimes it's like you know it'll kind of make up its own mind about what to do so we'll turn that back down to 0.7 um okay i think we're ready for testing so we'll come here um once you're in python you hit control z and then enter and that'll that'll allow you to x exit out of your python loop all right cls to clear the screen we'll do python chat can't open no such file oh right chat dot pi i forgot to do the completion all right user hey jax what are you up to i'm up to my usual goal of world peace great uh okay how are you doing that by promoting understanding and cooperation between different nations and groups do you have any links i need evidence i'm being real difficult here's a link jacks.org completely made that up that's great okay well jax is trying his best um okay so we see that our chat bot is indeed working but we are not seeing anything going on in the background so what if we want to do like debug right what if we want to see what's going on in the background we'll come back to that next time but i think we've done enough this episode so thanks for watching once again like and subscribe uh and then also please consider hopping over to patreon to support me directly um that will really turn this up to 11. thanks for watching and take care

CLEAR ESSAY:

==========

The code for our chatbot is now complete. We simply need to add a few lines to the end of the prompt to ensure that the bot knows to continue the conversation with the next line. We also need to add the tokens "jacks" and "user" to the list of things that the bot should not generate on its own. Doing this will ensure that our chatbot functions as intended.