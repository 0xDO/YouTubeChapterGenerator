The following is an unstructured video transcript. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: completion prompt um and since this is already run through i don't think we need to do the thing that i did in the index because we've already cleaned up the chunks right we've already cleaned it up so it should be encoded in a way that is friendly with um with gpt3 um okay so then we get an answer to the question and so then we do answers dot append answer so that should be fine um let's do print answer and we'll do um new line new line um just to give a little bit of vertical space so it's clear so it will see that it's it's accumulating the answers and then so this this will this this object here this list will have all of the answers because we're basically asking the same question but we're going to be asking it of different chunks of text and so it's like okay how do we get this nebulous combination of things together so then what we'll do is we will do we'll borrow the same exact thing that we did for the um for the summarization right and so we'll we'll take um we'll take text wrap so we'll make sure that we've got text wrap here so let's go back to recursively summarize so we'll do import whoops no do not delete that import text wrap and since the da vinci instruct has a token limit of 4 000 um [Music] so 4 000 tokens times four characters that's sixteen thousand characters so we can get a pretty big chunk of text um so we will do we'll do a text wrap of ten thousand characters um okay so i'll do uh answer the same question for all returned chunks and then we will do summarize the answers together and so here we say um whoops that's already here we are taking um here let me do a time check real quick because we're close enough to the end yeah this will be a longer video but we're closer to the end this is going way better than i thought knock on wood that this actually works um okay so summarize the answers together right that's what i was doing kind of lost my train of thought there for a second um okay so for uh no we need to join it all into one chunk okay so all answers equals what is it um dot join um answers i think that's how that works let me do a quick python l equals um we'll do bacon bacon and burger and then we'll do um align new line dot join l oh right s equals print print print as okay yes that is right make sure i get the syntax correct okay so basically what we're doing is we're joining all the answers together into one big block so regardless of how long it is um we can we can say okay let's take all these answers and then kind of squish them together um i'll probably only do one pass but you would technically want to do this multiple times so chunks equals text wrap make sure i use this correctly text wrap dot wrap um and so we'll do all answers and weighs i said 10 000 not twenty one thousand ten thousand that's the correct number of zeros i think four zeros yeah um okay so then for chunk in chunks uh we also need a uh we'll say final equals list so for chunk and chunks we are just going to summarize it all together um so we'll borrow this prompt instead of a concise summary we'll do detailed summary because we just we're just going to take all the different answers and kind of merge it and merge it into one so let's go ahead and save this detailed summary detailed summary and we'll save this under excuse me multi-document answering and we'll do prompt summary.text okay so basically what we're going to do is we're going to take for each of the chunks of the answers and you can do this recursively right until you get it into one thing we're going to do the same thing here so prompt equals open file prompt instead of answer we'll do prompt summary and we'll replace um so the thing to summarize result content that should be good and then we will do summary equals gpt3 completion uh prompt and then we will do uh final uh dot append summary okay so that should be that and this one does save it out to gpd3 logs let me make sure that that is there gpd3 logs um okay so then once it's done we will do print um we'll do new line new line and then we'll do actually here we can just go ahead and do that to give us a little bit of white space and then we'll do um final dot no i will do new line new line dot join final there we go so it'll actually look like a a final answer we'll see if this works might not may or may not um we'll have it output the first one i'll just have it output outputting each answer as it goes so that we can see it wow why am i nervous this is this is this is crazy um am i missing anything send it python answer questions um why did the supreme court strike down roe v wade well it didn't like that okay something went wrong [Laughter] um it looks like it didn't return any um anything here so i probably did something wrong with the search okay print results and then we'll just do an exit here because that's where i think it's broken whoops answer questions why did the supreme court overturn roe v wade yeah okay so the search the search is broken um my intuition was correct okay so vector equals gpt3 embedding for the text so that's the query right so the query is there uh and then the scores so for i and data so that's a list make sure that i pass that correctly um okay let's print out score just to make sure that it's actually um why okay we're getting scores so that's correct and then reverse equals true results list oh i just declared an empty list well there's your problem um okay so we need we just whoops get rid of that and the ordered um and then so we do ordered zero tada okay so that should be correct i think i fixed it famous last words okay so let's class why did the supreme court overturn row v weight oh it's taking longer bueller oh ah see i needed to add in a few more things okay import re from time import time and sleep okay so basically what happened was it got to where it's trying to give me the answers and then it blew up because i forgot to import re or regex which is i used to clean it up and then i also didn't import sleep as well

CLEAR ESSAY:

==========

The Supreme Court overturned Roe v Wade because it didn't like that the query is there, and the scores are correct. However, the reverse is true and the results list is empty. So, we need to class Why did the Supreme Court overturn Roe v Wade.

Oh, it's taking longer. Bueller.

See, I needed to add in a few more things. I forgot to import re or regex, which I used to clean it up, and I also didn't import sleep as well.