The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: hey everyone david shapiro here with a new kind of video i'm going to try i've had this idea for a while i've had this idea of doing a working session and what i mean by that is i'm just going to walk you through my entire process sometimes people don't really believe me when i tell them how fast i work or how easy this stuff is say you know what i'm just going to record it end to end and here's the project today someone said nicevid so this is my co-writing flash fiction with gpt3 let me zoom in a little bit um he says nicevid and the character dialog one i'm curious if you've tried using gpt3 to generate a high level logical plot summary where you prompt for a structure for a structure like setup incident an inciting incident midpoint false high etc etc in my experiments it is too extensive prompt chaining perhaps that's because it's more complex task i say i tried that with my auto muse project and it was not great at it however this is something that could be fine-tuned so that gave me an idea let me do an outline generator so i just created this repo here is the repo here um and uh i've added a couple files i just added my api key and and a boilerplate thing so let me just show you cd outline generator get status get add git commit am initial commit get push okay so you will see i just did i just did a push there's only a handful of files in here let's get started okay so the first thing to do with this is playground let's go to text davinci o2 so the very first thing let me zoom back in here is uh we need some raw data to work with so we're going to synthesize some data so the first thing is let's just right off the cuff let's see if this prompt works write a detailed um uh no not right imagine no brainstorm there we go brainstorm a plot synopsis for a random story um let's say detailed plot synopsis um and let's just see what that does the town of shepherd's town is a historic located in appalachian of blah blah blah sorry i'm trying to read too fast um this is great and it decides okay keeps going okay perfect so the town of shepherdstown is a historic small town located in the appalachian mountains of west virginia the town is home to a variety of shops and businesses as well as a number of different families the mcbride family has lived in shepherdstown for generations and they own a large farm on the outskirts of town the youngest mcbride daughter lizzie is a free-spirited 18 year old who has always been drawn to the town's history she loves to explore the old buildings and learn about the town's past one day lizzie discovers a hidden room in one of the buildings one of the old buildings the room is filled with dusty old boxes and furniture lizzie starts to explore and she finds a secret passage that leads to hidden staircase she climbs the staircase to find herself in a secret attic the attic is filled with old clothes furniture and books lizzie starts to look through the books and she finds an old journal the journal is filled with the handwritten accounts of the town's history at least lizzie is fascinated by the journal and decides to start her own research project on the town's history she spends the summer exploring the town's past and learning this like oh man this is some pure literary fiction right here okay so we've got a an initial prompt so let's go ahead and just save this um and we'll say we'll call this um prompt underscore premise dot text and so then what i do is i've got this this script that i'm starting um let's change this to davinci o2 and we'll use the same um the same settings so no frequency penalty no presence penalty um i'll leave these the stops actually i'll just remove those because they are not relevant to this project okay i think that's all we need so go with pep8 two new lines beneath each one okay so this is a function that i copy paste in all my projects some people have noticed that that every now and then your your um your prompt will fail and uh or your completion will fail and so i just have a retry built in it rarely needs that especially nowadays i think they i think they've upped their capacity but basically i just say like um oh i need to import sleep as well um from time import sleep um so basically it'll just wait a second and then try again in case it fails to talk to openai okay so for this since i like the prompt let's do if name equals main and this is not strictly required for this just because it's um prototyping i could just jump straight into a loop however this is good practice to do if name equals main if you want to call this from something else i'm not going to do that since i just do imperative programming and rapid prototyping but i just got in the habit and i like it because it just says okay let's demarcate this okay um let's see for i in range um let's see 0 to 10. let's just do 10 for now um let's see premise equals um gpt3 completion prompt equals 08. prompt equals need to load the file so i'll just copy this with open and what did i call it prompt premise because i will use different prompts in the future as in file so we'll say prompt equals infile dot read okay oh and another thing i forgot is what i do is i i grab the the output and i strip it so that removes all white space on from the edges and then i also do a regex swap replace for any any additional white space and just replace it with an individual space so in this case if it adds too much vertical space like new lines i want to remove all the new lines just so it ends up with a single block of text like you see here it's it's not always necessary but sometimes gpt3 will spit out too much too much vertical white space and i want to condense it um so that's why i have this little bit here and that actually reminds me i need to also import three which is regex um okay so premise equals gpt three completion prompt so that'll pass in the prompt i've got the engine set to default to text davinci o2 i've got tokens 500 just in case it gets cut off but you see

CLEAR ESSAY:

==========

Hey everyone, David Shapiro here with a new kind of video. I'm going to try something I've had this idea for a while – I've had this idea of doing a working session and walking you through my entire process. Sometimes people don't really believe me when I tell them how fast I work or how easy this stuff is, so I thought I'd just record it end-to-end and show you the project today.

Someone said "nicevid" – so this is my co-writing flash fiction with GPT3. Let me zoom in a little bit – he says "nicevid" and the character dialog one. I'm curious if you've tried using GPT3 to generate a high level logical plot summary where you prompt for a structure – for a structure like setup, incident, an inciting incident, midpoint, false high, etc. etc. In my experiments it is too extensive prompt chaining – perhaps that's because it's a more complex task.

I say I tried that with my Auto Muse project and it was not great at it. However, this is something that could be fine-tuned so that it works better. So that gave me an idea – let me do an outline generator.

So I just created this repo here – this is the repo. And I've added a couple files – I just added my API key and a boilerplate thing. So let me just show you – I'll do a "cd" into the "outline generator" and do a "get status", "get add", "git commit –am 'initial commit'", and then "get push".

Okay, so you will see I just did a push – there's only a handful of files in here. Let's get started.

Okay, so the first thing to do with this is go to the playground. Let's go to "textdavinci.com" – so the very first thing, let me zoom back in here, is we need some raw data to work with. So we're going to synthesize some data.

So the first thing is let's just right off the cuff – let's see if this prompt works. We'll write a detailed – no, not right. Imagine, no, brainstorm – there we go. "Brainstorm a plot synopsis for a random story". Let's say "detailed plot synopsis" – and let's just see what that does.

"The town of Shepherdstown is a historic small town located in the Appalachian mountains of West Virginia. The town is home to a variety of shops and businesses, as well as a number of different families. The McBride family has lived in Shepherdstown for generations and they own a large farm on the outskirts of town. The youngest McBride daughter, Lizzie, is a free-spirited 18 year old who has always been drawn to the town's history. She loves to explore the old buildings and learn about the town's past.

One day, Lizzie discovers a hidden room in one of the buildings. The room is filled with dusty old boxes and furniture. Lizzie starts to explore and she finds a secret passage that leads to a hidden staircase. She climbs the staircase to find herself in a secret attic. The attic is filled with old clothes, furniture, and books. Lizzie starts to look through the books and she finds an old journal. The journal is filled with the handwritten accounts of the town's history. Lizzie is fascinated by the journal and decides to start her own research project on the town's history. She spends the summer exploring the town's past and learning about its fascinating history."

Okay, so we've got an initial prompt. So let's go ahead and just save this – we'll call this "prompt_premise.txt". And so then what I do is I've got this script that I'm starting – let's change this to "textdavinci.com". And we'll use the same – the same settings. So no frequency penalty, no presence penalty. I'll leave these the stops – actually, I'll just remove those because they are not relevant to this project. Okay, I think that's all we need. So go with pep8 – two new lines beneath each one.

Okay, so this is a function that I copy paste in all my projects. Some people have noticed that that every now and then your your prompt will fail or your completion will fail. So I just have a retry built in – it rarely needs that, especially nowadays. I think they've upped their capacity, but basically I just say like, "Oh, I need to import sleep as well", from "time import sleep". So basically it'll just wait a second and then try again in case it fails to talk to openai.

Okay, so for this, since I like the prompt, let's do "if name equals main". And this is not strictly required for this – just because it's prototyping, I could just jump straight into a loop. However, this is good practice to do if you want to call this from something else. I'm not going to do that since I just do imperative programming and rapid prototyping. But I just got in the habit and I like it because it just says, "Okay, let's demarcate this".

Okay, let's see. For "i" in range – let's see, 0 to 10. Let's just do 10 for now. Let's see, premise equals – gpt3 completion. Prompt equals "08. prompt equals need to load the file". So I'll just copy this. With open – and what did I call it? "Prompt_premise" because I will use different prompts in the future as well. So we'll say "prompt equals infile.read".

Oh, and another thing I forgot is what I do is I grab the output and I strip it so that removes all white space on from the edges. And then I also do a regex swap replace for any any additional white space and just replace it with an individual space. So in this case, if it adds too much vertical space, like new lines, I want to remove all the new lines just so it ends up with a single block of text, like you see here. It's it's not always necessary, but sometimes GPT3 will spit out too much too much vertical white space and I want to condense it. So that's why I have this little bit here.

And that actually reminds me – I need to also import "regex". Okay, so "premise equals gpt3 completion". Prompt – so that'll pass in the prompt. I've got the engine set to default to "textdavinci.com". I've got "tokens=500" just in case it gets cut off. But you see how it's already completed the first sentence. So that's looking good.

And so then what I do is I just take this – I just take this output and I just copy it into my text editor. And then I just start writing from there. So that's the workflow. And you can see how fast this is. And so that's the project for today. I'm going to continue to work on this and try to improve it. But I just wanted to show you the idea and how it works.

So thanks for watching and I'll talk to you soon.