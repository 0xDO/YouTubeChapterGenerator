Summarize the entire following transcripts into a single descriptive title with timestamp:

TRANSCRIPT:
0:17:28.800,0:17:33.000
how many people are going to lose their job in 
the meantime and if they have like if they're
0:17:33.000,0:17:42.120
not able to retrain um or if the net net uh change 
is fewer jobs then that means some people will by
0:17:42.120,0:17:48.540
definition mathematically be permanently excluded 
from the job market and so because of that
0:17:49.320,0:17:55.320
um I went and looked up some statistics just 
to see like you know is this is this uh true
0:17:56.220,0:18:04.920
um you know again take it with a grain of salt 
um but so my work with auto Muse um I had some
0:18:04.920,0:18:12.600
breakthroughs yesterday and I realized that I 
am very close to writing novel length fiction
0:18:13.680,0:18:19.980
um that's going to be pretty coherent and then 
and and there's a few other things that I don't
0:18:19.980,0:18:25.560
even want to say out loud because um because of 
these breakthroughs and um I don't want to put
0:18:25.560,0:18:31.620
novelists or editors out of work um just because 
you can do something doesn't mean you should
0:18:32.220,0:18:38.400
and I think about like I would lose all my friends 
if I did that if I if I created if I created a
0:18:38.400,0:18:46.080
tool if I finished Auto Muse and it can just churn 
out novels decent enough novels um all of my best
0:18:46.080,0:18:52.920
friends are writers and some of them are aspiring 
to do it full time and if I if I am capable of it
0:18:52.920,0:18:58.740
then I know that someone else is going to be 
capable of it um before too long but you know
0:18:58.740,0:19:03.780
I'm I'm ahead of the curve so basically I'm going 
to put a pause on my auto Muse work that's the
0:19:03.780,0:19:10.140
that's the short version I'm going to keep doing 
it privately um just to see what what is possible
0:19:11.460,0:19:17.820
um but yeah like I don't want to put people out 
of work like what's the point right what's why
0:19:17.820,0:19:24.300
why are we here like I don't I understand that 
the point of capitalism and neoliberalism is
0:19:24.300,0:19:30.900
to generate more efficiency provide goods and 
services um more efficiently but at the same
0:19:30.900,0:19:39.420
time we are facing uh potentially very disruptive 
and and disruptive is a very soft word for painful
0:19:41.580,0:19:47.940
um major economic disruptions are painful like 
people lose their jobs people lose their homes

Descriptive title with timestamp: 17:28 - Exclusion from the Job Market


TRANSCRIPT:
 0:00:00.900,0:00:05.400
morning everybody David Shapiro here with 
your daily state of the industry update
0:00:06.000,0:00:11.820
as often happens my newsfeed helpfully 
supplied me with today's topic I think
0:00:11.820,0:00:17.700
it is a very timely topic because I have been 
diving more into alignment so today's paper
0:00:18.600,0:00:24.300
um it it's actually an older one January 5th 2021 
but like I said my newsfeed supplied it to me
0:00:25.320,0:00:29.280
um it's a relatively short paper at 
least the part that's published is
0:00:29.280,0:00:32.700
uh 12 Pages it's I think it's much 
longer they just cut some out for
0:00:34.320,0:00:39.900
um for uh for internet publishing but 
the abstract of this paper is pretty good
0:00:41.100,0:00:46.200
um pretty straightforward super intelligence is a 
hypothetical agent that possesses intelligence far
0:00:46.200,0:00:52.380
surpassing that of the brightest and most gifted 
human Minds in light of recent advances in machine
0:00:52.380,0:00:56.220
intelligence a number of scientists philosophers 
and technologists have revived the discussion
0:00:56.220,0:01:02.160
about the potentially catastrophic risks entailed 
by such an entity in this article we trace the
0:01:02.160,0:01:06.780
origins and development of the Neo fear of super 
intelligence and some of the major proposals for
0:01:06.780,0:01:13.320
its containment we argue that total containment is 
in principle impossible due to fundamental limits
0:01:13.320,0:01:18.960
inherent income in Computing itself assuming that 
a super intelligence will contain a program that
0:01:18.960,0:01:23.760
includes all the programs that can be executed by 
a universal turing machine on input potentially
0:01:23.760,0:01:28.380
as complex as the state of the world strict 
containment requires simulations of such a
0:01:28.380,0:01:34.080
program something theoretically and practically 
impossible so to put this in other words in order
0:01:34.080,0:01:40.140
to anticipate what the machine is going to do you 
have to be able to simulate it perfectly including
0:01:40.140,0:01:47.280
the the way that it interacts and the way that 
the world reacts um basically the whole world
0:01:47.280,0:01:54.300
is too complicated to simulate with any accuracy 
and so therefore you know if this if this super

Descriptive title with timestamp: 00:00 - The impossibility of containing a superintelligence


TRANSCRIPT:
0:14:13.360,0:14:19.440
best practices not to reuse the same variable
names but since i'm not modifying these i'm just
0:14:19.440,0:14:24.640
reading them it's not that big a deal but it's
still poor practice so just keep that in mind
0:14:24.640,0:14:29.840
i don't always follow the rules um okay so match
class so the first thing that we need to do
0:14:30.480,0:14:39.200
is um is for each of these categories
um so we'll do classes equals list
0:14:40.720,0:14:50.320
and then for um c in categories we'll do um
we'll just copy this real quick vector equals
0:14:50.320,0:14:55.440
gpt3 embedding but instead of a we'll do c so
that's this so that well this is a for loop which
0:14:55.440,0:15:02.640
means that we're going to iterate through each of
these items and we're going to say okay what is
0:15:02.640,0:15:11.840
my vector and actually you know what if i got to
write this i might as well put this down below um
0:15:12.480,0:15:20.880
so we declare our categories so we'll do for c in
categories um and we'll do this here so let's run
0:15:20.880,0:15:25.040
this once so this is another rule of thumb if
you're going to run a piece of code more than
0:15:25.040,0:15:31.040
once you put it in a place that one it'll only
run once if you only need to but also if you
0:15:31.040,0:15:36.320
need to call it multiple times then you then you
declare it as a function so let's just clean this
0:15:36.320,0:15:43.440
up here first we'll do it a little bit better all
right so we get the vector for the category and
0:15:43.440,0:15:49.760
so then what do we do well we want to save it in
this new variable called classes and so we'll say
0:15:50.880,0:15:58.000
info equals and we'll say we'll we'll declare this
as a dictionary so this is this is an explicit
0:15:58.000,0:16:04.320
uh definition so info equals dict and then
we'll say info um actually that's not the
0:16:04.320,0:16:09.040
way that i prefer to declare these so you can
implicitly declare with the curly brackets so
0:16:09.040,0:16:14.240
that says this is a dictionary and so
we'll say the dictionary so we'll say
0:16:15.600,0:16:24.400
category equals c and then we'll say vector
equals vector and so basically what this does
0:16:24.400,0:16:29.760
is it creates what's what's also called a hash
table where it's like okay every instance of

Descriptive title with timestamp:

==========

14:13 - Creating a dictionary of vectors for each category