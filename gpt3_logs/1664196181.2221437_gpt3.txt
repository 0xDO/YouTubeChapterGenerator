The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: result that we needed right here so we come back to the quick start and this is the expected response um and we can ensure that the collection was created so what will come or actually here's here's what i'll do i'll copy i'll copy this out um into dude so we'll save this not under auto muse we'll do q drink demo and so we'll say um windows curl commands so that way if you're following along at home um you can uh whoops you can um get the uh there we go copy and so then we'll replace the single quote with the double quote because windows is finicky like that and we'll come back here uh result green optimizer status okay index vector count blah blah so there we go we're good for that expected response and of course this shows you the response structured whereas windows just barfs it out okay so let's add some points so we're going to need to clean this up so basically but let's take a look at this so what do what does it mean by adding points so uh basically what it means is we're adding data points um and i haven't gone through this before as you can tell from the mistakes i'm making um so let's see points so if you send it a json so the the outer curly bracket that instantiates the json and then you say okay points um is the first element and then it's a list and the list contains id vector or it contains it contains sub elements each of which is a hash table um that set that contains the elements id vector payload okay i wonder if you have to do the id yourself interesting because it's like then how do you do you have to keep track of that every time like do i have to increment the id or what but i like how it's got this the um the payload it looks like it's highly variable right um there's different you can see that there's different payloads so you can you have an arbitrary amount of information you can attach to it which is actually really perfect for me because that this is going to be critical for my nexus service so let's copy this and put it out here and now we gotta clean this up so first let's replace um actually here let's copy this into a new one so first we'll replace um those with backslash that so a standard uh double quote with backslash double quote replace all so that escapes all of those and then we'll replace the single quotes with a double quote and then we will replace um well here we'll just do it this way data raw um yeah that should be fine so basically all i'm doing is just getting this into a single line because windows does not know how to handle multiple lines and copy paste this back over here alright whoops completed status okay that was fast dang look at that .0002 seconds dang now granted these are small vectors so that's fine go ahead and save that um okay expected response yup oh yeah theirs was about just as fast so that's really dang fast okay so search with filtering so okay you so the the basic thing is you post or you do a put rather not a post so you do a put and that's how you you send stuff to it so you can't get much simpler than that and then you do search so let's go ahead and copy this out and we'll do a quick search but um let's look at what this is so the search is you're doing a post okay so put is how you put um you put stuff up there um actually what what did we do to create it it was a put okay so to create the collection you use put to um to add data points you use put and then to do a search you use post so let's come out here go ahead and we'll do the same changes here actually i think i know how i'm going to do this so first let's go ahead and i'll teach you just a little bit of um of regex if you don't know that so uh backslash is the universal escape so if you do backslash backslash that escapes um that escapes the uh the escape so that you can then replace it with something so first let's just get rid of those we don't want any backslashes and then what we'll do is what i like to do is i'll do um backslash space so that is that is white space so backslash space is any white space and we want any white space of two or greater right so that gives us that captures all the new lines and so we'll replace those with just a single space so that brings it all into a single line and then what we'll do is we'll do the um we'll replace the double quotes and so we'll switch back to normal mode here so we'll replace the double quotes with an escaped double quote and then we'll replace the single quote with with the double quote and so now i have programmatically fixed this um fix this uh what you may call it um carl command the search one okay so let's get this and let's see if if the search works so do clear screen result there we go id4 version score so it gave me a score null null and let's see if that is what we expected um yes so payload null score etc etc okay and it took that was dang fast um let's see time yeah it was almost as fast on my computer but the result is different if we add a filter so then we can we can filter our responses um so there you go and it will it will reply with the top um so you give it top three and this is really similar to what i've done with my with my nexus microservice so this is this is basically a search microservice and it looks like it's really darn fast i think the combination of filtering will be good okay so let's go ahead and clean this up so we can go back we'll do backslash backslash and just replace that with a space replace all and then we'll go to those bring it all into one line and then we'll do um the individual quote or sorry the um double quote replace it with a backslash double quote and then a single quote with a double quote and you can save these as macros too um okay so this should do a search with a filter and there you go it replies with just uh just the two okay so um there you have it we've got that started but we're not done because i'm not going to manually type in curl commands all the time we need to do this with actual um with actual like python code so let's go to the

CLEAR ESSAY:

==========

In order to use the quick start guide for the expected response, we need to ensure that the collection is created. We can do this by copying the response into a new file, replacing the single quotes with double quotes ( since windows is finicky like that), and then checking the status. If everything is green, we're good to go.

To add points, we first need to clean up the JSON so that it's in one line. This way, windows will be able to handle it. To do a search, we again use POST. This time, we're searching with a filter. We can do this by adding "top": 3 to the JSON. This will give us the top three results.

Finally, we need to automate this process so that we're not manually typing in curl commands all the time. We can do this with python code.