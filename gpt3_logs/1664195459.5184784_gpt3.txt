The following is an unstructured video transcript by David Shapiro. Please rewrite this as a more structured, clear essay.

TRANSCRIPT: morning everybody david shapiro here um today we are going to go over maragi so moragi is kind of my magnum opus that's my big project other than the heuristic imperatives it's an open source project and so the purpose of this presentation is to orient you to the entire project so we're going to talk about the architecture of maragi and also the road map so first of all what is maragi meragi in a nutshell it's an acronym that means microservices architecture for robotics and artificial general intelligence i originally came up with the concept of maragi in late 2017 or 2018. it is a type of cognitive architecture so basically a cognitive architecture is a way to build a thinking machine or a reasoning machine cognitive architectures have been around for about 50 years they are used in things like deep sea deep sea remote operated vehicles or autonomous vehicles the mars rovers use cognitive architectures tesla cars use cognitive architectures so that's not anything new this is just a different type of cognitive architecture so maragi uses cognitive modules to approximate the neural functions of the human brain so it's not a structural copy of the human brain it is a functional copy of the human brain it uses natural language to think so all thought in moragi is written in natural language which means that it is interpretable and transparent but most importantly and you see this here it is an architecture to achieve functionally sentient autonomous machines so that's the two two primary things is that there will be functionally sentient and autonomous autonomous um they'll also be learning machines that's implicit um so now for the architectural overview at the highest level the architecture of maragi is a hub and spoke or a startup star topology this is because this is the easiest conceptually the nexus is at the hub so the nexus is a microservice that we'll go over in detail in just a few minutes um but from the simplest way to think about the nexus is that it is um functionally a syslog server it's it's for storing and retrieving logs now these logs are the thoughts or the memories or the sensations everything that that the artificial cognitive entity acquires or sees or hears or learns or thinks is going to be stored in the nexus so you can think of it as the central database the central repository a log server those kinds of things from a functional standpoint in terms of artificial cognition um it's the stream of consciousness um and so what i mean by that is that everything that the machine needs to be conscious of needs to end up in the nexus so each record in the nexus we see here is time stamped with a uuid and then it also has to contain some kind of content or metadata and we'll get i'll give you an example of those in just a second all the other microservices all talk to the nexus hence the name nexus it's the center of everything they talk via an api or some other interface there's other options we'll talk about that also in just a second but the key the key takeaway here is that it is a star topology because that is the simplest about the nexus it's the stream of consciousness for artificial cognition so it's a data repository for the acog or artificial cognitive entity it holds all memories sensation thoughts and ideas and plans it is indexed and searchable so this is critical the nexus serves as the memory center it's the consciousness and memory center of maragi which means that it has to be indexed and searchable that means you can use any kind of of a search engine right you can use solar elastic search you can use sql light if you want to um there's there's other possibilities um everything in it has to be a natural language though um there's not going to be any like code or abstract representations the exception is going to be vectors semantic vectors for search purposes but even still that's not even required if you have if you have an embedding or a vector for search that's only if you're going to use semantic search but you can use other kinds of search methods such as more conventional indexing by using existing technologies like solar elasticsearch elk stack there's also vector-based search like milvis weaviate and pinecone that will allow us to scale to many gigabytes or even terabytes worth of data for our artificial cognitive entities so that problem is already solved um so basically for the nexus we're gonna probably use something that already exists rather than making our own custom solution uh the stream of consciousness so kind of as i said everything that the the uh that maragi or the the artificial cognitive entity needs to be aware of must end up in the nexus um it's the heart of everything hence the name other services add messages to the nexus and then they also provide search so there's a two-way communication there so what would a record in the nexus look like so first there's going to be a time stamp this is true of all syslog servers is that it's a timestamp because you got to know when you received that message then i also recommend having a uuid which is a universally unique identifier which means that every single thought um or sensation or action that the the the meragi takes will have a uuid a unique identifier so that you can reference that specific action decision observation whatever it should have some kind of content which is a natural language entry and there's some examples on the right hand side that we'll go over in a second you might also have the originating service or model that produced that message that's going to be necessary later on specifically for learning so that that way you can label all of the data and have an ml ops a machine learning operations or machine learning pipeline so that everything can learn as it goes um heuristics and and and learning are critical to this design um and then you can have some context such as like metadata or a natural language purpose no for an example we have a timestamp of 123.456 the

CLEAR ESSAY:

==========

The Maragi project is an open-source effort to create a microservices architecture for robotics and artificial general intelligence (AGI). The project was conceived in late 2017 or early 2018 by David Shapiro, with the goal of creating a functional copy of the human brain.

Maragi uses cognitive modules to approximate the neural functions of the brain, and all thought is written in natural language. This makes the system interpretable and transparent, and also allows for learning. The project is designed to achieve functionally sentient and autonomous machines.

The Maragi architecture is a hub-and-spoke or star topology, with the Nexus microservice at the center. The Nexus is functionally a syslog server, and serves as the central repository for all thoughts, memories, sensations, and ideas. It is indexed and searchable, allowing for retrieval of any information stored within it.

All other microservices in the Maragi system talk to the Nexus, and each record in the Nexus is time-stamped with a UUID. This allows for easy identification and retrieval of any information stored within the system.